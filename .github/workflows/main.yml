name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Print Debug Information
        run: |
          echo "---- Debug Information ----"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Branch: $GITHUB_REF"
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "EC2_USER: ${{ secrets.EC2_USER }}"
          echo "SSH_PRIVATE_KEY is set: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
          echo "----------------------------"
          echo "Current Directory: $(pwd)"
          echo "Files in Current Directory:"
          ls -la
      
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Build Docker image
        run: |
          docker build -t rec_service:latest .

      - name: Save Docker image
        run: docker save rec_service:latest | gzip > rec_service.tar.gz

      - name: Transfer Docker image to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "rec_service.tar.gz"
          target: "/tmp"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
                sudo apt-get update
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
            fi

            # Load and run the Docker image
            docker load < /tmp/rec_service.tar.gz
            docker stop rec_service || true
            docker rm rec_service || true
            docker run -d --name rec_service -p 5001:5000 rec_service:latest
